// 3.按照从大到小的顺序排列 ，var arr= [10, 5, 34, 59, 98],最后打印排序后的数组。


var arr = [10, 5, 34, 59, 98]
// 方法1: 使用js为我们提供的方法  b-a  逆序 也叫降序
// arr.sort(function (a, b){return b-a});

// console.log(arr);

// 方法2: 手写冒泡排序

// 分析: 因为冒泡排序要进行多轮比较 而且每一轮比较中又有多次比较
// 因此 用的方法是嵌套for循环
// 1.确定外层循环的次数 规律是: 数组的长度-1
// 2.确定内层循环的次数 规律是: 数组的长度-1-i;
// 3.确定内侧循环中前后两个元素位置的交换: 
// 3.1 判断 如果当前数 > 下一个数 那么就交换位置



// 步骤: 降序
// 1.确定外层循环的次数 规律是: 数组的长度-1
for (var i = 0; i < arr.length - 1; i++) {
    // 2.确定内层循环的次数 规律是: 数组的长度-1-i;
    for (var j = 0; j < arr.length - 1 - i; j++) {
        // 3.确定内侧循环中前后两个元素位置的交`换: 
        // 3.1 判断 如果当前数 < 下一个数 那么就交换位置
        if (arr[j] < arr[j + 1]) {
            // 3.1.1 声明临时变量
            // 3.1.2 让临时变量等于当前数
            var temp = arr[j];
            // 3.1.3 让当前数等于下一个数
            arr[j] = arr[j + 1];
            // 3.1.4 让下一个数等于临时变量
            arr[j + 1] = temp;
        }

    }

}
console.log(arr);

